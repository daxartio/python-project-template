[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.commitizen]
name = "cz_conventional_commits"
version = "{{ cookiecutter.version }}"
tag_format = "$version"
version_files = [
    "{{cookiecutter.pkg_name}}/__init__.py",
    "pyproject.toml:version"
]
bump_message = "chore(release): version $current_version â†’ $new_version"
update_changelog_on_bump = true

[project]
name = "{{ cookiecutter.project_slug }}"
version = "{{ cookiecutter.version }}"
requires-python = ">={{ cookiecutter.python_version }}"
description = "{{ cookiecutter.description }}"
authors = [ { name = "{{ cookiecutter.full_name }}" }, { email = "{{ cookiecutter.email }}" } ]
license = { file = "LICENSE" }
readme = "README.md"
keywords = []
dependencies = []

{% if cookiecutter.use_cli -%}
[project.scripts]
{{ cookiecutter.project_slug }} = '{{ cookiecutter.pkg_name }}.cli.app:run'
{%- endif %}

[project.urls]
Homepage = "{{ cookiecutter.repository }}"
Repository = "{{ cookiecutter.repository }}"
Documentation = "{{ cookiecutter.site_url }}"
{%- if cookiecutter.use_docs %}
Changelog = "{{ cookiecutter.site_url }}changelog/"
{%- else %}
Changelog = "{{ cookiecutter.repository }}/blob/main/CHANGELOG.md/"
{%- endif %}

[project.optional-dependencies]

[dependency-groups]
dev = [
    "mypy >= 1",
    "pytest >= 8.3.2",
    "pytest-cov >= 5.0.0",
    "pytest-deadfixtures >= 2.2.1",
    "pytest-mock >= 3.14.0",
    "ruff >= 0.7",
]
{%- if cookiecutter.use_docs %}
docs = [
    "markdown-include >= 0.8",
    "mkdocs >= 1.6",
    "mkdocs-material >= 9.5",
]
{%- endif %}
git = ["commitizen >= 3.30"]

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.coverage.run]
omit = ["tests/*", "**/__main__.py", "**/.venv/*", "**/site-packages/*"]
branch = true

[tool.coverage.report]
show_missing = true
skip_covered = true
fail_under = 100

[tool.pytest.ini_options]
addopts = "--strict-markers --showlocals --verbosity 2"
log_level = "DEBUG"

[tool.ruff.lint]
select = []
ignore = []
exclude = []

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]
