[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.commitizen]
name = "cz_conventional_commits"
version = "{{ cookiecutter.version }}"
tag_format = "$version"
version_files = [
    "{{cookiecutter.pkg_name}}/__init__.py",
    "pyproject.toml:version"
]
bump_message = "chore(release): version $current_version â†’ $new_version"
update_changelog_on_bump = true

[tool.poetry]
name = "{{ cookiecutter.project_slug }}"
version = "{{ cookiecutter.version }}"
description = "{{ cookiecutter.description }}"
authors = ["{{ cookiecutter.author }}"]
license = {% if cookiecutter.license == 'MIT' %}"MIT"{% endif %}{% if cookiecutter.license == 'APACHE' %}"Apache-2.0"{% endif %}
readme = "README.md"
repository = "{{ cookiecutter.repository }}"
homepage = "{{ cookiecutter.repository }}"{% if cookiecutter.use_docs %}
documentation = "{{ cookiecutter.site_url }}"{% endif %}
keywords = []
{% if cookiecutter.use_cli %}
[tool.poetry.scripts]
{{ cookiecutter.project_slug }} = '{{ cookiecutter.pkg_name }}.cli.app:run'
{% endif %}{% if cookiecutter.use_docs %}
[tool.poetry.urls]
Changelog = "{{ cookiecutter.site_url }}changelog/"
{% else %}
[tool.poetry.urls]
Changelog = "{{ cookiecutter.repository }}/blob/main/CHANGELOG.md/"
{% endif %}
[tool.poetry.dependencies]
python = "^{{ cookiecutter.python_version }}"

[tool.poetry.group.dev.dependencies]
black = "^24.8.0"{% if cookiecutter.use_isort %}
mypy = "^1.11.2"{% endif %}
pytest = "^8.3.2"
pytest-cov = "^5.0.0"
pytest-deadfixtures = "^2.2.1"
pytest-mock = "^3.14.0"{% if cookiecutter.use_ruff %}
ruff = "^0.6.4"{% endif %}
{% if cookiecutter.use_docs %}
[tool.poetry.group.docs.dependencies]
markdown-include = "^0.8.1"
mkdocs = "^1.5.3"
mkdocs-material = "^9.4.16"
{% endif %}
[tool.poetry.group.git.dependencies]
commitizen = "^3.29.0"
{% if cookiecutter.use_isort %}
[tool.isort]
profile = "black"
{% endif %}
[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.coverage.run]
omit = ["tests/*", "**/__main__.py", "**/.venv/*", "**/site-packages/*"]
branch = true

[tool.coverage.report]
show_missing = true
skip_covered = true
fail_under = 100

[tool.pytest.ini_options]
addopts = "--strict-markers --showlocals --verbosity 2"
log_level = "DEBUG"
{% if cookiecutter.use_ruff %}
[tool.ruff.lint]
select = []
ignore = []
exclude = []

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]{% endif %}
